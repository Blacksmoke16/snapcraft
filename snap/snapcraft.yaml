name: snapcraft
base: core18
summary: easily create snaps
description: |
    Snapcraft aims to make upstream developers' lives easier and as such is not
    a single toolset, but instead is a collection of tools that enable the
    natural workflow of an upstream to be extended with a simple release step
    into Snappy.
adopt-info: snapcraft
confinement: classic
license: GPL-3.0
assumes:
  - snapd2.39

apps:
  snapcraft:
    environment:
      PATH: "/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      # https://github.com/lxc/pylxd/pull/361
      PYLXD_WARNINGS: "none"
    command: usr/bin/python3.8 $SNAP/bin/snapcraft
    completer: snapcraft-completion

build-packages:
  - build-essential
  - intltool
  - libapt-pkg-dev
  - libffi-dev
  - libssl-dev
  - libsodium-dev
  - liblzma-dev
  - libxml2-dev
  - libxslt1-dev
  - libyaml-dev
  - patch
  - python3.8-dev
  - sed

parts:
  bash-completion:
    source: debian
    plugin: dump
    stage:
      - snapcraft-completion

  patchelf:
    plugin: autotools
    source: https://github.com/snapcore/patchelf
    source-type: git
    source-branch: '0.9+snapcraft'
    build-packages:
      - g++
      - make
    override-build: |
      snapcraftctl build
      make check

  snapcraft-libs:
    plugin: nil
    stage-packages:
        - apt
        - apt-transport-https
        - apt-utils
        - binutils
        - execstack
        - gpg
        - gpgv
        - libffi6
        - libsodium23
        - libxml2
        - libxslt1.1
        - squashfs-tools
        - xdelta3
    override-build: |
        snapcraftctl build

        echo "Create libsodium symlink..."
        TRIPLET_PATH="$SNAPCRAFT_PART_INSTALL/usr/lib/$(gcc -print-multiarch)"
        LIBSODIUM="$(readlink -n "$TRIPLET_PATH/libsodium.so.23")"
        ln -sf "$LIBSODIUM" "$TRIPLET_PATH/libsodium.so"

  snapcraft:
    source: .
    plugin: nil
    organize:
        # Put snapcraftctl into its own directory that can be included in the PATH
        # without including other binaries.
        bin/snapcraftctl: bin/scriptlet-bin/snapcraftctl
    build-environment:
        - CPPFLAGS: '-I/usr/include/python3.8'
        - CRYPTOGRAPHY_DONT_BUILD_RUST: "1"
        - SNAPCRAFT_PYTHON: "$SNAPCRAFT_PART_INSTALL/usr/bin/python3.8"
        - SNAPCRAFT_PYTHON_LIBS: "$SNAPCRAFT_PART_INSTALL/usr/lib/python3.8"
        - SNAPCRAFT_PYTHON_PKGS: "$SNAPCRAFT_PART_INSTALL/lib/python3.8/site-packages"
        - SNAPCRAFT_PIP_INSTALL_CMD: "$SNAPCRAFT_PYTHON -m pip install --user -U"
        - PYTHONUSERBASE: "$SNAPCRAFT_PART_INSTALL"
    override-build: |
        set -eux

        # pip may create site-packages as 0700, create it with correct permissions.
        install -d -m 0755 "$SNAPCRAFT_PYTHON_PKGS"
        ln -sf python3.8 "$SNAPCRAFT_PART_INSTALL/usr/bin/python3"

        # Site customization to load correct paths depending on running as snap or building.
        cp "$SNAPCRAFT_PART_SRC/patches/sitecustomize.py" "$SNAPCRAFT_PYTHON_LIBS/sitecustomize.py"

        $SNAPCRAFT_PIP_INSTALL_CMD pip==20.1 wheel setuptools
        $SNAPCRAFT_PIP_INSTALL_CMD -r "$SNAPCRAFT_PART_SRC/requirements.txt" "$SNAPCRAFT_PART_SRC"

        if [ ! -f "$SNAPCRAFT_PYTHON_PKGS/ws4py/async_websocket.py.orig" ]; then cat $SNAPCRAFT_PROJECT_DIR/patches/ws4py-py3.7-compat.patch | patch -p1 -b -d "$SNAPCRAFT_PYTHON_PKGS"; fi

        version="$($SNAPCRAFT_PYTHON setup.py --version)"
        snapcraftctl set-version "$version"

        [ -n "$(echo $version | grep "+git")" ] && grade=devel || grade=stable
        snapcraftctl set-grade "$grade"

        # Patch ctypes loader to allow loading shared objects in snap.
        ctypes_init="$SNAPCRAFT_PART_INSTALL/usr/lib/python3.8/ctypes/__init__.py"
        if [ ! -f "${ctypes_init}.orig" ]; then patch -s -b "$ctypes_init" "$SNAPCRAFT_PART_SRC/patches/ctypes_init.diff"; fi

        # Prevent runtime python from loading user libraries (outside snap).
        sed -i "$SNAPCRAFT_PYTHON_LIBS/site.py" -e 's/^ENABLE_USER_SITE = None$/ENABLE_USER_SITE = False/'
    stage:
        - -bin/pip*
        - -usr/lib/python3.6
        - -usr/bin/python3.6*
        - -usr/share/python-wheels
    stage-packages:
        - python3-pip
        - python3.8
    after: [snapcraft-libs]

  legacy-snapcraft:
    plugin: nil
    source: https://github.com/snapcore/snapcraft.git
    source-branch: legacy
    source-depth: 1
    build-environment:
        - CPPFLAGS: '-I/usr/include/python3.8'
        - CRYPTOGRAPHY_DONT_BUILD_RUST: "1"
        - SNAPCRAFT_PYTHON: "$SNAPCRAFT_PART_INSTALL/usr/bin/python3.8"
        - SNAPCRAFT_PYTHON_LIBS: "$SNAPCRAFT_PART_INSTALL/usr/lib/python3.8"
        - SNAPCRAFT_PYTHON_PKGS: "$SNAPCRAFT_PART_INSTALL/lib/python3.8/site-packages"
        - SNAPCRAFT_PIP_INSTALL_CMD: "$SNAPCRAFT_PYTHON -m pip install --user -U"
        - PYTHONUSERBASE: "$SNAPCRAFT_PART_INSTALL"
    override-build: |
        set -eux

        # pip may create site-packages as 0700, create it with correct permissions.
        install -d -m 0755 "$SNAPCRAFT_PYTHON_PKGS"
        ln -sf python3.8 "$SNAPCRAFT_PART_INSTALL/usr/bin/python3"

        # Site customization to load correct paths depending on running as snap or building.
        cp "$SNAPCRAFT_PROJECT_DIR/patches/sitecustomize.py" "$SNAPCRAFT_PYTHON_LIBS/sitecustomize.py"

        $SNAPCRAFT_PIP_INSTALL_CMD pip==20.1 wheel setuptools
        $SNAPCRAFT_PIP_INSTALL_CMD -r "$SNAPCRAFT_PART_SRC/requirements.txt" "$SNAPCRAFT_PART_SRC"

        # Update sitecustomize path for organizing to legacy_snapcraft.
        sed -ri 's|(lib/.*/site-packages)|legacy_snapcraft/\1|' $SNAPCRAFT_PYTHON_LIBS/sitecustomize.py

        # Patch ctypes loader to allow loading shared objects in snap.
        ctypes_init="$SNAPCRAFT_PART_INSTALL/usr/lib/python3.8/ctypes/__init__.py"
        if [ ! -f "${ctypes_init}.orig" ]; then patch -s -b "$ctypes_init" "$SNAPCRAFT_PART_SRC/patches/ctypes_init.diff"; fi

        # Prevent runtime python from loading user libraries (outside snap).
        sed -i "$SNAPCRAFT_PYTHON_LIBS/site.py" -e 's/^ENABLE_USER_SITE = None$/ENABLE_USER_SITE = False/'
    organize:
        '*': legacy_snapcraft/
    stage:
        - -**RECORD
        - -**__pycache__
        - -legacy_snapcraft/bin/pip*
        - -legacy_snapcraft/usr/lib/python3.6
        - -legacy_snapcraft/usr/bin/python3.6*
        - -legacy_snapcraft/usr/share/python-wheels
    stage-packages:
        - python3-pip
        - python3.8
    after: [snapcraft-libs, snapcraft]
